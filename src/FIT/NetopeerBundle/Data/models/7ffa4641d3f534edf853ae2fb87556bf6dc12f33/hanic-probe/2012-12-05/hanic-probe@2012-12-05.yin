<module xmlns="urn:ietf:params:xml:ns:yang:yin:1" xmlns:hanicprobe="urn:cesnet:tmc:hanicprobe:1.0" xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types" name="hanic-probe">
    <namespace uri="urn:cesnet:tmc:hanicprobe:1.0"/>
    <prefix value="hanicprobe"/>
    <import module="ietf-yang-types">
      <prefix value="yang"/>
    </import>
    <organization>
      <text>CESNET, z.s.p.o.</text>
    </organization>
    <contact>
      <text>rkrejci@cesnet.cz</text>
    </contact>
    <description>
      <text>Module specifying configuration model and RPC operations for
network traffic flow probe using HANIC.</text>
    </description>
    <revision date="2012-12-05">
      <description>
        <text>Added constraint on minimal number of collectors for each exporter.</text>
      </description>
    </revision>
    <revision date="2012-10-16">
      <description>
        <text>Allow multiple collectors for a single exporter.</text>
      </description>
    </revision>
    <revision date="2012-04-13">
      <description>
        <text>Initial revision</text>
      </description>
    </revision>
    <typedef name="decimal">
      <type name="string">
        <pattern value="[0-9]+(\.[0-9]+)?"/>
      </type>
      <description>
        <text>Simple decimal numbers type definition</text>
      </description>
    </typedef>
    <container name="hanic-probes">
      <list name="hanic-probe">
        <key value="combo-card-device"/>
        <leaf name="combo-card-device">
          <type name="string"/>
          <description>
            <text>Combo card device file. Connects the flow probe with the specific Combo card.</text>
          </description>
        </leaf>
        <container name="netcope">
          <list name="ibuf">
            <key value="id"/>
            <leaf name="id">
              <type name="uint8"/>
              <description>
                <text>IBUF ID.</text>
              </description>
            </leaf>
            <leaf name="enabled">
              <config value="false"/>
              <type name="boolean"/>
              <default value="true"/>
              <description>
                <text>Input buffer state.</text>
              </description>
            </leaf>
            <leaf name="pacodag-overflow-occurred">
              <config value="false"/>
              <type name="boolean"/>
              <description>
                <text>PACODAG FIFO overflow occurred.</text>
              </description>
            </leaf>
            <leaf name="dfifo-overflow-occurred">
              <config value="false"/>
              <type name="boolean"/>
              <description>
                <text>DFIFO overflow occured.</text>
              </description>
            </leaf>
            <leaf name="total-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Total number of packets arrived. Correct? (Viktor)</text>
              </description>
            </leaf>
            <leaf name="received-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of packets received.</text>
              </description>
            </leaf>
            <leaf name="discarded-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of packets discarded.</text>
              </description>
            </leaf>
            <leaf name="buffer-overflow">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of packets rejected because of the full buffer.</text>
              </description>
            </leaf>
            <leaf name="error-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of ivalid packets arrived.</text>
              </description>
            </leaf>
            <container name="error-checks">
              <leaf name="gmii">
                <config value="false"/>
                <type name="boolean"/>
                <description>
                  <text>GMII error detection enabled.</text>
                </description>
              </leaf>
              <leaf name="crc">
                <config value="true"/>
                <type name="boolean"/>
                <default value="true"/>
                <description>
                  <text>CRC check enabled.</text>
                </description>
              </leaf>
              <leaf name="minimum-frame-length">
                <config value="false"/>
                <type name="boolean"/>
                <description>
                  <text>Minimum frame length check enabled.</text>
                </description>
              </leaf>
              <leaf name="mtu-frame-length">
                <config value="false"/>
                <type name="boolean"/>
                <description>
                  <text>Maximum frame length check enabled.</text>
                </description>
              </leaf>
              <leaf name="mac-address">
                <config value="false"/>
                <type name="boolean"/>
                <default value="true"/>
                <description>
                  <text>MAC address (according to mac-mode) check enabled.</text>
                </description>
              </leaf>
            </container>
            <leaf name="minimum-frame-length">
              <when condition="./error-checks/minimum-frame-length='true'"/>
              <config value="true"/>
              <type name="uint32"/>
              <default value="64"/>
              <description>
                <text>Minimum frame length value. If not set, the minimum frame length
check is disabled.</text>
              </description>
            </leaf>
            <leaf name="mtu-frame-length">
              <when condition="./error-checks/mtu-frame-length='true'"/>
              <config value="true"/>
              <type name="uint32">
                <range value="0..16352"/>
              </type>
              <description>
                <text>Maximum frame length set. If not set, the MTU frame length check
is disabled.</text>
              </description>
            </leaf>
            <container name="mac-address">
              <when condition="./error-checks/mac-address='true'"/>
              <config value="false"/>
              <description>
                <text>MAC addresses list.</text>
              </description>
              <leaf-list name="value">
                <type name="yang:mac-address"/>
                <max-elements value="16"/>
                <description>
                  <text>MAC address.</text>
                </description>
              </leaf-list>
            </container>
            <leaf name="mac-mode">
              <when condition="./error-checks/mac-address='true'"/>
              <config value="false"/>
              <type name="enumeration">
                <enum name="promisc"/>
                <enum name="mac-only"/>
                <enum name="mac-with-broadcast"/>
                <enum name="non-promisc"/>
              </type>
              <description>
                <text>Interface mode. Promisc receives all packets. Mac-only receives 
only packets for set MAC addresses. Mac-with-broadcast receives 
packets for set MAC addresses as well as broadcasted packets. 
Non-promisc mode receives packets for set MAC addresses, 
broadcasted packets and multicasted packets.</text>
              </description>
            </leaf>
          </list>
          <list name="obuf">
            <key value="id"/>
            <leaf name="id">
              <type name="uint8"/>
              <description>
                <text>OBUF ID.</text>
              </description>
            </leaf>
            <leaf name="enabled">
              <config value="true"/>
              <type name="boolean"/>
              <default value="true"/>
              <description>
                <text>Output buffer state.</text>
              </description>
            </leaf>
            <leaf name="total-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Total number of packets attempted to transmit.</text>
              </description>
            </leaf>
            <leaf name="transmited-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of packets actually transmited.</text>
              </description>
            </leaf>
            <leaf name="error-packets">
              <config value="false"/>
              <type name="yang:zero-based-counter64"/>
              <description>
                <text>Number of ivalid packets attempted to transmit.</text>
              </description>
            </leaf>
            <leaf name="repeater-mode">
              <config value="true"/>
              <type name="enumeration">
                <enum name="obuf"/>
                <enum name="repeater"/>
                <enum name="idle"/>
                <enum name="off"/>
              </type>
              <default value="obuf"/>
              <description>
                <text>Port repeater status. In obuf state, interface transmits normal
output data controlled by OBUF. In repeater mode, the received
traffic is retransmitted. In idle mode, any output is disabled.
The last off mode turns off the transceiver.</text>
              </description>
            </leaf>
          </list>
        </container>
        <list name="hanic">
          <key value="id"/>
          <leaf name="id">
            <type name="uint8"/>
            <description>
              <text>hanic ID</text>
            </description>
          </leaf>
          <container name="hash-fields">
            <description>
              <text>List of fields to use as hash input.</text>
            </description>
            <leaf name="IPVersion">
              <type name="boolean"/>
              <default value="false"/>
            </leaf>
            <leaf name="SrcIP">
              <type name="boolean"/>
              <default value="true"/>
            </leaf>
            <leaf name="DstIP">
              <type name="boolean"/>
              <default value="true"/>
            </leaf>
            <leaf name="L4Protocol">
              <type name="boolean"/>
              <default value="false"/>
            </leaf>
            <leaf name="SrcPort">
              <type name="boolean"/>
              <default value="false"/>
            </leaf>
            <leaf name="DstPort">
              <type name="boolean"/>
              <default value="false"/>
            </leaf>
          </container>
          <leaf name="sampling">
            <type name="uint8">
              <range value="1..16"/>
            </type>
            <default value="1"/>
            <description>
              <text>Sampling unit ratio.</text>
            </description>
          </leaf>
          <leaf name="round-robin-enabled">
            <config value="false"/>
            <type name="boolean"/>
            <description>
              <text>Use Round Robin packet distribution instead hash based.</text>
            </description>
          </leaf>
          <leaf name="unified-header-enabled">
            <config value="false"/>
            <type name="boolean"/>
            <description>
              <text>Forward packets in unified header format.</text>
            </description>
          </leaf>
          <container name="hash-filter">
            <leaf name="low">
              <type name="uint16"/>
              <description>
                <text>Minimal accepted hash value for hash-based sampling.</text>
              </description>
            </leaf>
            <leaf name="high">
              <type name="uint16"/>
              <description>
                <text>Maximal accepted hash value for hash-based sampling.</text>
              </description>
            </leaf>
          </container>
          <leaf name="opposite-direction-enable">
            <type name="boolean"/>
            <default value="false"/>
            <description>
              <text>Compute hash for opposite direction packet (swap Src and Dst IP).</text>
            </description>
          </leaf>
          <leaf name="filtered-packets">
            <config value="false"/>
            <type name="yang:zero-based-counter64"/>
            <description>
              <text>Number of filtered out and sampled packets.</text>
            </description>
          </leaf>
          <container name="dma-discarded-packets">
            <config value="false"/>
            <description>
              <text>Number of discarded packets for the specific DMA channel.</text>
            </description>
            <leaf-list name="value">
              <type name="yang:zero-based-counter64"/>
            </leaf-list>
          </container>
        </list>
        <container name="exporters">
          <list name="exporter">
            <key value="id"/>
            <leaf name="id">
              <type name="uint8"/>
              <description>
                <text>Exporter unique identifier in the configuration data.</text>
              </description>
            </leaf>
            <list name="collector">
              <key value="host port id"/>
              <min-elements value="1"/>
              <leaf name="id">
                <type name="uint8"/>
                <description>
                  <text>Flow data source identification sent to the collector</text>
                </description>
              </leaf>
              <leaf name="host">
                <type name="string"/>
                <description>
                  <text>Hostname (or IPv4/6 address) of the collector where to send data.</text>
                </description>
              </leaf>
              <leaf name="port">
                <type name="uint16"/>
                <description>
                  <text>Port of the collector where to send data.</text>
                </description>
              </leaf>
              <leaf name="protocol_export">
                <type name="enumeration">
                  <enum name="NetFlow v5"/>
                  <enum name="NetFlow v9"/>
                  <enum name="IPFIX"/>
                </type>
                <default value="NetFlow v9"/>
                <description>
                  <text>Flow information export protocol.</text>
                </description>
              </leaf>
              <leaf name="protocol_ip">
                <type name="enumeration">
                  <enum name="IPv4"/>
                  <enum name="IPv6"/>
                </type>
                <default value="IPv4"/>
                <description>
                  <text>Force IP protocol when connecting to the collector.</text>
                </description>
              </leaf>
              <leaf name="protocol_transport">
                <when condition="./protocol_export='IPFIX'"/>
                <type name="enumeration">
                  <enum name="UDP"/>
                  <enum name="TCP"/>
                  <enum name="SCTP"/>
                </type>
                <default value="TCP"/>
                <description>
                  <text>Transport protocol for the IPFIX protocol.</text>
                </description>
              </leaf>
              <leaf name="filter">
                <type name="string"/>
                <description>
                  <text>Name of the filter applied to the exported data going to this collector.</text>
                </description>
              </leaf>
              <leaf name="filter-params">
                <type name="string"/>
                <description>
                  <text>Specific parameters for the specified filter.</text>
                </description>
              </leaf>
            </list>
            <leaf name="interface_mask">
              <type name="uint8"/>
              <default value="255"/>
              <description>
                <text>Mask for input interfaces.</text>
              </description>
            </leaf>
            <leaf name="timeout_active">
              <type name="uint16">
                <range value="0..1200"/>
              </type>
              <default value="180"/>
              <units name="seconds"/>
            </leaf>
            <leaf name="timeout_inactive">
              <type name="uint8">
                <range value="0..60"/>
              </type>
              <default value="10"/>
              <units name="seconds"/>
            </leaf>
            <leaf name="cpu_mask">
              <type name="uint8"/>
              <default value="1"/>
              <description>
                <text>Mask of allowed CPUs.</text>
              </description>
            </leaf>
            <leaf name="flowcache_size">
              <type name="uint8">
                <range value="4..30"/>
              </type>
              <default value="19"/>
              <description>
                <text>Queue (flowcache) size in power of 2.</text>
              </description>
            </leaf>
          </list>
        </container>
      </list>
    </container>
    <rpc name="reset-counters">
      <description>
        <text>Reset all counters of the specified probe.</text>
      </description>
      <input>
        <leaf name="combo-card-device">
          <type name="string"/>
          <description>
            <text>Combo card device file. Connects the operation with the specific
hanic-probe.</text>
          </description>
        </leaf>
      </input>
    </rpc>
    <rpc name="restart-exporters">
      <description>
        <text>Restart all exporters of the specified probe.</text>
      </description>
      <input>
        <leaf name="combo-card-device">
          <type name="string"/>
          <description>
            <text>Combo card device file. Connects the operation with the specific
hanic-probe.</text>
          </description>
        </leaf>
      </input>
    </rpc>
  </module>