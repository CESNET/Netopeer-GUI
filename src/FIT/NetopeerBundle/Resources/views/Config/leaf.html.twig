<div class="leaf-line
	{% if addLevel is defined and addLevel == true %} level-{{level}}{% endif %}
	{% if hasChildren is defined and hasChildren == true %} has-children{% endif %}
	{% if element.attributes.eltype is defined %}
		type-{{element.attributes.eltype}}
	{% else %}
		type-undefined
	{% endif %}
	config
">
	<span class="label">
		<span class="dots"></span>
		{% if element.attributes.description is defined %}
			<span class="tooltip help">
				<span class="icon-help">?</span>
				<span class="tooltip-description">{{element.attributes.description}}</span>
			</span>
		{% endif %}
		<span class="label-cover {% if element.attributes.description is defined %}has-tooltip{% endif %}">
			{% if hasChildren is defined and hasChildren == true %}<span class="bull"></span>{% endif %}
			<strong>{{key}}</strong>
			{% if element.attributes.mandatory is defined %}
				<span class="mandatory tooltip">
				<span class="icon-help">*</span>
				<span class="tooltip-description">Mandatory item</span>
				</span>
			{% endif %}
		</span>
	</span>

	{% if element.attributes.eltype is defined and element.attributes.eltype == "list" and ((hideEditBar is defined and hideEditBar != true) or hideEditBar is not defined) %}
		<span class="edit-bar">
			{# <img src="{{ asset('bundles/netopeer/images/ico/add_child.png')}}" alt="Add child" title="Add child" class="create-child" rel="{{ xpath|replace({'/': '-', '[': '?', ']': '!'}) }}_{{ path("generateFromModel", {"level": level, "xPath": xpath|replace({'/': '-', '[': '?', ']': '!'})|url_encode, "key": routeParams.key, "module": routeParams.module, "subsection": routeParams.subsection} ) }}"/> #}

			<img src="{{ asset('bundles/netopeer/images/ico/add_sibling.png')}}" alt="Add sibling" title="Add sibling" rel="{{ xpath|replace({'/': '-', '[': '?', ']': '!'}) }}" class="sibling" />
			<img src="{{ asset('bundles/netopeer/images/ico/remove_child.png')}}" alt="Remove child" title="Remove child" class="remove-child" rel="{{ xpath|replace({'/': '-', '[': '?', ']': '!'}) }}" />		
		</span>
	{% endif %}

	{% if element.0 is defined and element.0|length == 0 %}

		{% set currentInputName = "configDataForm[" ~ key ~ "_" ~ xpath|replace({'/': '-', '[': '?', ']': '!'}) ~ "]" %}
		{% if element.attributes.type is defined and element.attributes.type == 'boolean' %}
			<span class="config-value-cover">
				<label>
					<input 
						type="radio" 
						value="true" 
						name="{{currentInputName}}" 
						{% if element.0 == "true" %}checked="checked"{% endif %} 
						{% if element.attributes.default is defined %}default="{{element.attributes.default}}"{% endif %}
					/>
					true
				</label>
				<label>
					<input 
						type="radio" 
						value="false" 
						name="{{currentInputName}}" 
						{% if element.0 == "false" %}checked="checked"{% endif %} 
						{% if element.attributes.default is defined %}default="{{element.attributes.default}}"{% endif %}
					/>
					false
				</label>
			</span>
		{% elseif element.attributes.type is defined and element.attributes.type == 'enumeration' %}
			<span class="config-value-cover">
				<select name="{{currentInputName}}">
					{% for val in explode('|', element.attributes.enumval) %}
						<option value="{{val}}" {% if element.0 == val %}selected="selected"{% endif %}>{{val}}</option>
					{% endfor %}
				</select>
			</span>
		{% else %}
			{% set inputType = "text" %}
			{% set inputClass = "text" %}
			{% set min = "" %}
			{% set max = "" %}

			{% if element.attributes.type is defined %}
				{% if isNumberType(element.attributes.type) %}
					{% set inputType = "number" %}
					{% if element.attributes.range is defined %}
						{% set minMax = explode("..", element.attributes.range) %}
						{% if minMax|length == 2 %}
							{% set min = 'min=' ~ minMax[0] %}
							{% set max = 'max=' ~ minMax[1] %}
							{% set inputType = "range" %}
							{% set inputClass = "range" %}
						{% endif %}
					{% endif %}
				{% elseif isUrlType(element.attributes.type) %}
					{% set inputType = "url" %}
				{% endif %}
			{% endif %}
			{% if element.attributes.iskey is defined and element.attributes.iskey == "true" %}
				{% set disabledInput = 'disabled="true"' %}
			{% else %}
				{% set disabledInput = "" %}
			{% endif %}

			<input 
				type="{{inputType}}" 
				class="{{inputClass}} value" 
				value="{{element.0}}" 
				name="{{currentInputName}}" 
				{{disabledInput}}
				{{min}} {{max}}
				{% if element.attributes.default is defined %}default="{{element.attributes.default}}"{% endif %}
			/>
		{% endif %}
	{% else %}
		<span class="value"></span>
	{% endif %}

	{% if 0 and element.attributes.type is defined %}
	{% endif %}
</div>
