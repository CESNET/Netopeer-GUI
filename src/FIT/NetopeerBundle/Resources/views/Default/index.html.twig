{% extends 'FITNetopeerBundle::layout.html.twig' %}

{% block javascripts %}
	{% if (getSchemaWithAjax is defined and getSchemaWithAjax == true) %}
		{#% set idForAjaxGetSchema = 0 %#}
		<script type="text/javascript">
			$(document).ready(function() {
				var idForAjaxGetSchema = {{ idForAjaxGetSchema }};
				var targetConfigure = $("#row-" + idForAjaxGetSchema + " .configure");
				targetConfigure.find('> a').hide();
				$("<span/>", {
					'class': 'loading',
					text: "Loading..."
				}).appendTo(targetConfigure);
				$.get("{{ path("getSchema", {"key": idForAjaxGetSchema} ) }}", function(data) {
					var dataArr = $.parseJSON(data);
					if (dataArr['status'] == "success") {
						targetConfigure.find(".loading").remove();
						targetConfigure.find("> a").show();
					} else {
						targetConfigure.find(".loading").remove();
						targetConfigure.text("Could not configure device.");
					}
					if (dataArr['message']) {
						var flashMessage = $("<div/>", {
							"class": "alert " + dataArr['status']
						});
						flashMessage.text(dataArr['message']);
						$("#config h2").after(flashMessage);
					}

					reloadHistoryOfConnectedDevices();
				});
			});
		</script>
	{% endif %}
	<script type="text/javascript">
		$(document).ready(function() {
			reloadHistoryOfConnectedDevices();
		});

		function reloadHistoryOfConnectedDevices() {
			$.get("{{ path("historyOfConnectedDevices") }}", function(data) {
				if (!$("#history-of-connected-devices").length) {
					$("#left").html(data);
					$("#history-of-connected-devices").delegate("a", 'click', function($e) {
						$e.preventDefault();
						updateConnectFormValues($(this), $(this).data().deviceId);
					});
				}
			});
		}

		function updateConnectFormValues($el, connectedDeviceId) {
			var url = "{{ path("connectedDeviceAttr", {"connectedDeviceId": 0}) }}";
			url = url.replace("0", connectedDeviceId);
			$.get(url, function(data) {
				if (data !== false) {
					var jsonArr = $.parseJSON(data);
					$("#form_host").val(jsonArr['host']);
					$("#form_port").val(jsonArr['port']);
					$("#form_user").val(jsonArr['userName']);

					$el.parent().children('a').removeClass('active');
					$el.addClass('active');
				}
			});
		}
	</script>
{% endblock javascripts %}

{% block title %}Connection management{% endblock title %}

{% block singleContentClass %}
	max-width-column
{% endblock singleContentClass %}

{% block state %}
	<form action="{{ path('_home') }}" method="post" {{ form_enctype(form) }} class="login">
		<legend>Connect to server</legend>
	    {{ form_widget(form) }}
	    <input type="submit" value="Connect" />
	</form>
{% endblock state %}

{% block config %}
	<h2>Active connection list</h2>
	{% if sessionConnections is empty %}
		<div class="alert info">
			You are not connected to any server.
		</div>
	{% else %}
		<table>
			{% for key in sessionConnections %}
				<tr id="row-{{ loop.index - 1 }}">
					<td> {{ key.time }} </td>
					<td>{{ key.host }}</td>
					<td class="configure"><a href='{{ path("handleConnection", {"command": "get", "key": loop.index - 1} ) }}'><span id="ico-conf"></span>Configure device</a></td>
					<td><a href='{{ path("handleConnection", {"command": "disconnect", "key": loop.index - 1} ) }}'>disconnect</a></td>
				</tr>
			{% endfor %}
		</table>
	{% endif %}
{% endblock config %}
