{#
@author David Alexa <alexa.david@me.com>

Copyright (C) 2012-2015 CESNET

LICENSE TERMS

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
  notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
  notice, this list of conditions and the following disclaimer in
  the documentation and/or other materials provided with the
  distribution.
3. Neither the name of the Company nor the names of its contributors
  may be used to endorse or promote products derived from this
  software without specific prior written permission.

ALTERNATIVELY, provided that this notice is retained in full, this
product may be distributed under the terms of the GNU General Public
License (GPL) version 2 or later, in which case the provisions
of the GPL apply INSTEAD OF those given above.

This software is provided ``as is'', and any express or implied
warranties, including, but not limited to, the implied warranties of
merchantability and fitness for a particular purpose are disclaimed.
In no event shall the company or contributors be liable for any
direct, indirect, incidental, special, exemplary, or consequential
damages (including, but not limited to, procurement of substitute
goods or services; loss of use, data, or profits; or business
interruption) however caused and on any theory of liability, whether
in contract, strict liability, or tort (including negligence or
otherwise) arising in any way out of the use of this software, even
if advised of the possibility of such damage.
#}

{% extends 'FITModuleDefaultBundle::layout.html.twig' %}
{% block title %}Section {% if sectionName is defined and not(sectionName is empty) %}- {{sectionName}}{% endif %}{% endblock title %}

{% block leftColumnAdditional %}
	{% if (hideColumnControl is not defined) or (hideColumnControl is defined and hideColumnControl != true) %}
		<div class="change-columns-layout nav-left">
			<h5 class="left-column-base">Show as:</h5>
			<a href="{{ path('changeColumnLayout', {"newValue": "true"}) }}" class="item ajaxLink" data-disable-history="true" title="Merged state & config">
				<span class="bullet"></span>
				Merged
			</a>
			<a href="{{ path('changeColumnLayout', {"newValue": "false"}) }}" class="item ajaxLink" data-disable-history="true" title="State & config separately">
				<span class="bullet"></span>
				Separate
			</a>
		</div>
	{% endif %}
{% endblock leftColumnAdditional %}

{% set stateDefined = 'false' %}

{% block htmlAdditions %} ng-app="NetopeerGUIApp"{% endblock %}

{% block state %}
{% block singleContent %}
	{#<div class="edit-bar">#}
		{#<span class="create-child"#}
		{#rel="--*" data-typeahead-path="/symfony/app_dev.php/ajax/get-values-for-label/FORMID/0/nacm/XPATH/">new node</span>#}
	{#</div>#}

	{% set stateDefined = 'true' %}
	{% if configSingleContent is defined %}
		{{ configSingleContent|raw }}
	{% else %}
		<h1 class="left">{% if stateSectionTitle is defined %}{{stateSectionTitle}}{% else %}Config &amp; State data{% endif %}</h1>
		{% if 1 or stateJson is defined %}
			{#and (isEmptyModule is defined and isEmptyModule == true)#}
			<hr class="cleaner" />
			<div id="mainView" ng-controller="ConfigurationController">
				<button ng-click="reload()">reload data</button>
				<button ng-click="download(jsonData)">download as JSON</button>
				{% if jsonEditable is not defined or jsonEditable != false %}
				<button ng-click="submitConfiguration(jsonData)">Apply changes</button>
				<button ng-click="undo()" ng-disabled="hasUndo()">history undo</button>
				<button ng-click="redo()" ng-disabled="hasRedo()">history redo</button>
				{% endif %}

				<div class="jsonView">
					<json child="jsonData" default-collapsed="false" type="object" hide-collapse="true"></json>
				</div>

				<hr>
				<div>
					<textarea id="jsonTextarea" ng-model="jsonString"></textarea>
					<span class="red" ng-if="!wellFormed">JSON not well-formed!</span>
				</div>
			</div>
			<form action="" method="post" name="formConfigData" data-disable-history="true" data-serialize-children="true" class="form">
			</form>
			{% if modelTreeDump is defined %}
			<div id="hiddenModelTreeDump">
<pre>
{{ modelTreeDump|raw }}
</pre>
			</div>
			{% endif %}
		{% else %}
			<div class="alert info">
				No results found.
			</div>
			{% if additionalForm is defined %}
				{{ additionalForm|raw }}
			{% endif %}
		{% endif %}
	{% endif %}
{% endblock singleContent %}
{% endblock state %}

{% block notifications %}
	{% if ncFeatures is defined and ncFeatures["nc_feature_notification"] is defined %}
		{% if (app.request.get('key') is defined) and (not (app.request.get('key') is empty)) and (lockedConn is defined) %}
			<script type="text/javascript">
				var lookupIpUrl = '{{ path('lookupIp', {"ip": "REPLACE_IP"}) }}';
				var socket = getNotifWebSocket({{ app.request.get('key') }}, "{% if sessionHash is defined %}{{sessionHash}}{% endif %}", "ws://{{ app.request.host }}:8080/");
				if ($(notifOutput).hasClass('hidden')) {
					$(notifOutput).removeClass('hidden');
					notifResizable();
				}
			</script>
		{% endif %}
		<div class="notif-cover">
			<div class="notif-history-cover"></div>
			{#<a href="{{ path("notificationsHistoryTo", {"connectedDeviceId": app.request.get('key'), "from": '-10', 'to': '0'} ) }}" data-key="{{ app.request.get('key') }}" class="button grey right" id="js-get-notif-history" title="Get notifications from history">Load history</a>#}
			{# TODO: show, when notifications history wont cause deadlock #}
		</div>
	{% endif %}

{% endblock notifications %}

